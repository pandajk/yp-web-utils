"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;function ImagePreloader(src,options){options=Object.assign({prefix:"",suffix:""},options);switch(Object.prototype.toString.call(src)){case"[object Array]":this.src=src;src.map(el=>{if(this.buffer.indexOf(el)<0){this.buffer.push(el)}});break;case"[object String]":this.src=options.prefix+src+options.suffix;if(this.buffer.indexOf(src)<0){this.buffer.push(src)}break;}}ImagePreloader.prototype.buffer=[];ImagePreloader.prototype.loadImage=function loadImage(){const image=this.onload(this.src);return image};ImagePreloader.prototype.loadImages=function loadImage(){const images=this.src.map(el=>this.onload(el));return Promise.all(images)};ImagePreloader.prototype.onload=function onload(src){return new Promise((resolve,reject)=>{if(!/.(png|jpg|jpeg|webp)/.test(src)){reject("It is not an image, or format not support.");return}let retry=0;const image=new Image;image.onload=function(){resolve({width:image.width,height:image.height,src:image.src})};image.onerror=function(){retry+=1;if(retry>3){reject("image load error")}else{image.src=src}console.log("onerror")};if(!/(dev-)?res.yopoint./.test(src)){reject("image domain is illegal")}else{image.src=src}})};var _default=ImagePreloader;exports.default=_default;